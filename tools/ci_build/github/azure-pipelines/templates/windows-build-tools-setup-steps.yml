# sets up common build tools for the windows build machines before build

parameters:
  EnvSetupScript: ''
  buildArch: amd64
  setVcvars: false
steps:
    - task: NuGetToolInstaller@0
      displayName: Use Nuget 4.9
      inputs:
        versionSpec: 4.9.4
    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '$(Build.SourcesDirectory)\csharp\OnnxRuntime.CSharp.sln'
        feedsToUse: config
        nugetConfigPath: '$(Build.SourcesDirectory)\csharp\Nuget.CSharp.config'
        restoreDirectory: '$(Build.SourcesDirectory)\csharp'
    # - task: UniversalPackages@0
    #   displayName: 'Download python'
    #   inputs:
    #     command: download
    #     vstsFeed: '$(System.TeamProject)'
    #     vstsFeedPackage: 'miniconda3_win64'
    #     vstsPackageVersion: '4.5.11'
    #     downloadDirectory: '$(Build.BinariesDirectory)\python'

    # Temporary bypass of artifacts permission issue
    - task: CmdLine@1
      displayName: 'Download azcopy'
      inputs:
        filename: 'AzCopy.exe'
        arguments: '/Y /Source:https://onnxruntimetestdata.blob.core.windows.net/models/azcopy.exe /Dest:$(Build.BinariesDirectory)\azcopy.exe'
        
    - task: CmdLine@1
      displayName: 'Download python'
      inputs:
        filename: 'AzCopy.exe'
        arguments: '/Y /Source:https://onnxruntimetestdata.blob.core.windows.net/models/Miniconda3-4.7.10-Windows-x86_64.exe /Dest:$(Build.BinariesDirectory)\Miniconda3-4.7.10-Windows-x86_64.exe'               
  
    - task: CmdLine@1
      displayName: 'Run python installer'
      inputs:
        filename: '$(Build.BinariesDirectory)\Miniconda3-4.7.10-Windows-x86_64.exe'
        arguments: '/S /NoRegistry=1 /AddToPath=0 /RegisterPython=0 /D=$(Build.BinariesDirectory)\packages\python'
      timeoutInMinutes: 10

    - task: BatchScript@1
      displayName: 'setup env'
      inputs:
        filename: '$(Build.SourcesDirectory)\tools\ci_build\github\windows\${{parameters.EnvSetupScript}}'
        modifyEnvironment: true
        workingFolder: '$(Build.BinariesDirectory)'
    - task: CmdLine@1
      displayName: 'Install conda modules'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\scripts\conda.exe'
        arguments: 'install -q --insecure -y pyopenssl setuptools wheel numpy'
      timeoutInMinutes: 10

    - task: PythonScript@0
      displayName: 'Download test data'
      inputs:
        scriptPath: '$(Build.SourcesDirectory)\tools\ci_build\github\download_test_data.py'
        arguments: --test_data_url $(TestDataUrl) --build_dir $(Build.BinariesDirectory)
        pythonInterpreter: '$(Build.BinariesDirectory)\packages\python\python.exe'
        workingDirectory: $(Build.BinariesDirectory)

    - task: CmdLine@1
      continueOnError: true
      displayName: 'Run OpenCPPCoverage installer'
      inputs:
        filename: '$(Build.BinariesDirectory)\installer\opencppcoverage\installer.exe'
        arguments: '/SP- /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /DIR="$(Build.BinariesDirectory)\OpenCppCoverage"'

    - task: BatchScript@1
      displayName: 'Setup VS2017 env vars'
      inputs:
        filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat'
        arguments: '${{parameters.buildArch}} -vcvars_ver=14.11'
        modifyEnvironment: true
      condition: ${{parameters.setVcvars}}
